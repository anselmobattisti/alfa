{"version":3,"sources":["webpack:///./src/views/device/New.vue?7ace","webpack:///src/views/device/New.vue","webpack:///./src/views/device/New.vue?bda3","webpack:///./src/views/device/New.vue","webpack:///./src/views/node/api.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","attrs","msg","show","type","_s","text","on","onSubmit","model","value","form","callback","$$v","$set","expression","staticClass","staticStyle","nodes","connectionTypes","locations","staticRenderFns","component","apiNode","newNode","node","Promise","resolve","reject","config","api","post","then","resp","data","catch","e","Error","updateNode","put","id","removeNode","nodeId","delete","getNodes","get","updateStatus","getNode","getNodeImages","nodeIp","getNodeStats","getNodesForSelect","ret","forEach","element","push","ip","name","_id","getNodesForVmsSelect"],"mappings":"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","file":"js/deviceNew.74243e5b.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h2',[_vm._v(\"New Device\")]),_c('b-alert',{attrs:{\"show\":_vm.msg.show,\"variant\":_vm.msg.type}},[_vm._v(\"\\n          \"+_vm._s(_vm.msg.text)+\"\\n      \")]),_c('b-form',{on:{\"submit\":_vm.onSubmit}},[_c('b-form-group',{attrs:{\"id\":\"input-group-1\",\"label\":\"Name:\",\"label-for\":\"name\"}},[_c('b-form-input',{attrs:{\"id\":\"name\",\"type\":\"text\",\"required\":\"\"},model:{value:(_vm.form.name),callback:function ($$v) {_vm.$set(_vm.form, \"name\", $$v)},expression:\"form.name\"}})],1),_c('b-form-group',{attrs:{\"id\":\"input-group-3\",\"label\":\"Edge Node:\",\"label-for\":\"node\"}},[_c('b-form-select',{staticClass:\"mt-3\",staticStyle:{\"margin-top\":\"0px!important\"},attrs:{\"id\":\"nodeIp\",\"options\":_vm.nodes,\"size\":\"sm\"},model:{value:(_vm.form.nodeIp),callback:function ($$v) {_vm.$set(_vm.form, \"nodeIp\", $$v)},expression:\"form.nodeIp\"}})],1),_c('b-form-group',{attrs:{\"id\":\"input-group-1\",\"label\":\"Physical Path:\",\"label-for\":\"physicalPath\"}},[_c('b-form-input',{attrs:{\"id\":\"physicalPath\",\"type\":\"text\"},model:{value:(_vm.form.physicalPath),callback:function ($$v) {_vm.$set(_vm.form, \"physicalPath\", $$v)},expression:\"form.physicalPath\"}})],1),_c('b-form-group',{attrs:{\"id\":\"input-group-3\",\"label\":\"Connection Type:\",\"label-for\":\"connectionType\"}},[_c('b-form-select',{staticClass:\"mt-3\",staticStyle:{\"margin-top\":\"0px!important\"},attrs:{\"id\":\"connectionType\",\"options\":_vm.connectionTypes,\"size\":\"sm\"},model:{value:(_vm.form.connectionType),callback:function ($$v) {_vm.$set(_vm.form, \"connectionType\", $$v)},expression:\"form.connectionType\"}})],1),_c('b-form-group',{attrs:{\"id\":\"input-group-2\",\"label\":\"Connection Parameters:\",\"label-for\":\"parameters\"}},[_c('b-textarea',{attrs:{\"id\":\"connectionParameters\"},model:{value:(_vm.form.connectionParameters),callback:function ($$v) {_vm.$set(_vm.form, \"connectionParameters\", $$v)},expression:\"form.connectionParameters\"}})],1),_c('b-form-group',{attrs:{\"id\":\"input-group-3\",\"label\":\"Location:\",\"label-for\":\"location\"}},[_c('b-form-select',{staticClass:\"mt-3\",staticStyle:{\"margin-top\":\"0px!important\"},attrs:{\"required\":\"\",\"id\":\"location\",\"options\":_vm.locations,\"size\":\"sm\"},model:{value:(_vm.form.location),callback:function ($$v) {_vm.$set(_vm.form, \"location\", $$v)},expression:\"form.location\"}})],1),_c('b-form-group',{attrs:{\"id\":\"input-group-2\",\"label\":\"Description:\",\"label-for\":\"description\"}},[_c('b-form-textarea',{attrs:{\"id\":\"description\",\"type\":\"text\"},model:{value:(_vm.form.description),callback:function ($$v) {_vm.$set(_vm.form, \"description\", $$v)},expression:\"form.description\"}})],1),_c('b-row',[_c('b-col',[_c('b-button',{attrs:{\"type\":\"submit\",\"variant\":\"primary\"}},[_vm._v(\"Save\")])],1),_c('b-col',{staticClass:\"text-right\"},[_c('b-button',{attrs:{\"to\":\"/device\",\"variant\":\"secondary\"}},[_vm._v(\"Back\")])],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <h2>New Device</h2>\n\n        <b-alert :show=\"msg.show\" :variant=msg.type>\n            {{ msg.text }}\n        </b-alert>\n\n        <b-form @submit=\"onSubmit\">\n            <b-form-group id=\"input-group-1\" label=\"Name:\" label-for=\"name\">\n                <b-form-input id=\"name\" v-model=\"form.name\" type=\"text\" required/>\n            </b-form-group>\n\n            <b-form-group id=\"input-group-3\" label=\"Edge Node:\" label-for=\"node\">\n                <b-form-select style=\"margin-top:0px!important\" id=\"nodeIp\" v-model=\"form.nodeIp\" :options=\"nodes\" size=\"sm\" class=\"mt-3\"></b-form-select>\n            </b-form-group>\n\n            <b-form-group id=\"input-group-1\" label=\"Physical Path:\" label-for=\"physicalPath\">\n                <b-form-input id=\"physicalPath\" v-model=\"form.physicalPath\" type=\"text\"/>\n            </b-form-group>\n\n            <b-form-group id=\"input-group-3\" label=\"Connection Type:\" label-for=\"connectionType\">\n                <b-form-select style=\"margin-top:0px!important\" id=\"connectionType\" v-model=\"form.connectionType\" :options=\"connectionTypes\" size=\"sm\" class=\"mt-3\"></b-form-select>\n            </b-form-group>\n\n            <b-form-group id=\"input-group-2\" label=\"Connection Parameters:\" label-for=\"parameters\">\n                <b-textarea id=\"connectionParameters\" v-model=\"form.connectionParameters\"/>\n            </b-form-group>\n\n            <b-form-group id=\"input-group-3\" label=\"Location:\" label-for=\"location\">\n                <b-form-select required style=\"margin-top:0px!important\" id=\"location\" v-model=\"form.location\" :options=\"locations\" size=\"sm\" class=\"mt-3\"></b-form-select>\n            </b-form-group>\n\n            <b-form-group id=\"input-group-2\" label=\"Description:\" label-for=\"description\">\n                <b-form-textarea id=\"description\" v-model=\"form.description\" type=\"text\"/>\n            </b-form-group>\n\n            <b-row>\n                <b-col>\n                    <b-button type=\"submit\" variant=\"primary\">Save</b-button>\n                </b-col>\n                <b-col class=\"text-right\">\n                    <b-button to=\"/device\" variant=\"secondary\">Back</b-button>        \n                </b-col>\n            </b-row>\n        </b-form>\n  </div>\n</template>\n\n<script>\nimport {apiDevice} from './api'\nimport {apiLocation} from '../location/api'\nimport {apiNode} from '../node/api'\n\nexport default {\n    name: 'deviceNew',\n    data() {\n        return {\n            locations: [],\n            connectionTypes: [],\n            nodes: [],\n            form: {\n                name: '',\n                physicalPath: '',\n                connectionType: \"\",\n                connectionParameters: \"\",                \n                description: '',\n                nodeIp: '',\n                node: ''\n            },\n            msg: {\n                text: false,\n                type: '',\n                show: false\n            }\n        }\n    },\n    methods: {\n        onSubmit(evt) {\n            evt.preventDefault()\n\n           // find the node with the ip\n            for(let i = 0; i < this.nodes.length; i++) {\n                if (this.nodes[i].value == this.form.nodeIp) {\n                    this.form.node = this.nodes[i].id\n                }\n            }\n                        \n            apiDevice.newDevice(this.form)\n                .then(() => {\n                    this.msg.text = \"Device saved\"\n                    this.msg.type = \"success\"\n                    this.msg.show = true\n                })\n                .catch((e) => {\n                    this.msg.text = `Error when saving device ${e}`\n                    this.msg.type = \"danger\"\n                    this.msg.show = true\n                })\n        }\n    },\n    created() {\n\n        apiNode.getNodesForSelect()\n            .then((nodes) => {\n                this.nodes = nodes\n            })\n\n        apiDevice.getConnectionTypes()\n            .then((ret) => {\n                this.connectionTypes = ret\n            })       \n \n        apiLocation.getLocationsForSelect()\n            .then((ret) => {\n                this.locations = ret\n            })\n\n    }\n}\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./New.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./New.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./New.vue?vue&type=template&id=1b8588fb&\"\nimport script from \"./New.vue?vue&type=script&lang=js&\"\nexport * from \"./New.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { config } from '../../config'\n\nexport const apiNode = {\n  \n  newNode (node) {\n    if (!node) {\n      return Promise.reject(new Error('Data not informed'))\n    }\n    return new Promise((resolve, reject) => {\n      config.api.post(`/node/`,node)\n        .then(resp => {\n          resolve(resp.data)\n        })\n        .catch((e) => {\n          reject(new Error(`Error when creating a new node ${e}`))\n        })\n    })\n  },  \n  updateNode (node) {\n    if (!node) {\n      return Promise.reject(new Error('Data not informed'))\n    }\n    return new Promise((resolve, reject) => {\n      config.api.put(`/node/${node.id}`,node)\n        .then(resp => {\n          resolve(resp.data)\n        })\n        .catch((e) => {\n          reject(new Error(`Error when updating a node ${e}`))\n        })\n    })\n  },  \n  removeNode (nodeId) {\n    if (!nodeId) {\n      return Promise.reject(new Error('Data not informed'))\n    }\n    return new Promise((resolve, reject) => {\n      config.api.delete(`/node/${nodeId}`)\n        .then(resp => {\n          resolve(resp.data)\n        })\n        .catch((e) => {\n          reject(new Error(`Error when removing a new node ${e}`))\n        })\n    })\n  },  \n\n  getNodes () {\n    return new Promise((resolve, reject) => {\n      config.api.get(`/node/`)\n        .then(resp => {\n            resolve(resp.data)\n        })\n        .catch(e => {\n            reject(e)\n        })\n    })\n  },\n\n  updateStatus () {\n    return new Promise((resolve, reject) => {\n      config.api.get(`/node/updateStatus`)\n        .then(resp => {\n            resolve(resp.data)\n        })\n        .catch(e => {\n            reject(e)\n        })\n    })\n  },\n\n  getNode (nodeId) {\n    return new Promise((resolve, reject) => {\n      config.api.get(`/node/${nodeId}`)\n        .then(resp => {\n          resolve(resp.data)\n        })\n        .catch(e => {\n          reject(e)\n        })\n    })\n  },\n\n  getNodeImages (nodeIp) {\n    return new Promise((resolve, reject) => {\n      config.api.get(`/node/images/${nodeIp}`)\n        .then(resp => {\n          resolve(resp.data)\n        })\n        .catch(e => {\n          reject(e)\n        })\n    })  \n  },\n\n  getNodeStats (id) {\n    return new Promise((resolve, reject) => {\n      config.api.get(`/node/status/${id}`)\n        .then(resp => {\n          resolve(resp.data)\n        })\n        .catch(e => {\n          reject(e)\n        })\n    })\n  },\n\n  /**\n   * This will be used for the combobox that demands a different return format\n   */\n  getNodesForSelect () {\n    return new Promise((resolve, reject) => {\n      config.api.get(`/node/`)\n        .then(resp => {\n            let ret = []\n            resp.data.forEach(element => {\n              ret.push({\n                value: element.ip,\n                text: `${element.name} ${element.ip}`,\n                id: element._id\n              })\n            });\n            resolve(ret)\n        })\n        .catch(e => {\n            reject(e)\n        })\n    })\n  },  \n\n  /**\n   * This will be used for the VMS combobox that demands a different return format\n   */\n  getNodesForVmsSelect () {\n    return new Promise((resolve, reject) => {\n      config.api.get(`/node/nodeOptions`)\n        .then(resp => {\n            let ret = []\n            resp.data.forEach(element => {\n              ret.push({\n                value: element.ip,\n                text: `${element.name}`,\n                id: element._id\n              })\n            });\n            resolve(ret)\n        })\n        .catch(e => {\n            reject(e)\n        })\n    })\n  },  \n}"],"sourceRoot":""}